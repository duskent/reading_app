{"version":3,"sources":["webpack:///webpack/bootstrap a3faf4a6e00ee9fc6155","webpack:///external \"graphql\"","webpack:///./server/db/models/Book.js","webpack:///./server/db/models/Category.js","webpack:///./server/graphql/types/CategoryType.js","webpack:///./server/graphql/types/BookType.js","webpack:///./server/graphql/types/CategoryInputType.js","webpack:///external \"mongoose\"","webpack:///external \"express\"","webpack:///external \"transliteration\"","webpack:///./server/graphql/types/Message.js","webpack:///./server/graphql/types/BookInputType.js","webpack:///external \"babel-polyfill\"","webpack:///./server/index.js","webpack:///external \"path\"","webpack:///./server/graphql/index.js","webpack:///external \"express-graphql\"","webpack:///./server/graphql/schema.js","webpack:///./server/graphql/categories/getCategory.js","webpack:///./server/graphql/types/BookCategoryType.js","webpack:///./server/graphql/categories/getCategories.js","webpack:///./server/graphql/categories/createCategory.js","webpack:///./server/graphql/categories/updateCategory.js","webpack:///./server/graphql/categories/deleteCategory.js","webpack:///./server/graphql/categories/addBookToCategory.js","webpack:///./server/graphql/categories/removeBookFromCategory.js","webpack:///./server/graphql/books/getBooks.js","webpack:///./server/graphql/books/getBook.js","webpack:///./server/graphql/books/createBook.js","webpack:///./server/graphql/books/updateBook.js","webpack:///./server/graphql/books/deleteBook.js","webpack:///./server/graphql/books/addCategoryToBook.js","webpack:///./server/graphql/books/removeCategoryFromBook.js","webpack:///./server/db/index.js","webpack:///external \"dotenv\""],"names":["Schema","bookSchema","title","type","String","required","author","finished","Boolean","default","slug","categories","name","pre","next","_id","_conditions","_update","findOneAndUpdate","model","categorySchema","CategoryType","description","fields","id","books","resolve","source","find","BookType","categoryNames","map","c","$in","CategoryInputType","Message","message","BookInputType","app","use","static","get","req","res","sendFile","listen","process","env","PORT","console","log","schema","context","request","pretty","graphiql","Query","Object","assign","Mutation","query","mutation","getCategory","args","findOne","Error","BookCategoryType","getCategories","createCategory","category","create","updateCategory","new","deleteCategory","deleteOne","addBookToCategory","bookId","newCategory","where","push","$push","removeBookFromCategory","pull","$pull","getBooks","getBook","createBook","book","newBook","updateBook","updatedBook","module","exports","deleteBook","addCategoryToBook","removeCategoryFromBook","load","Promise","global","connect","DATABASE_URL","db","connection","on","error","bind"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a3faf4a6e00ee9fc6155","module.exports = require(\"graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql\"\n// module id = 0\n// module chunks = 0","// Schema\nimport mongoose from 'mongoose'\nconst Schema = mongoose.Schema\n// Slugify\nimport {slugify} from 'transliteration'\n\nconst bookSchema = new Schema({\n  title: {type: String, required: true},\n  author: String,\n  finished: {type: Boolean, default: false},\n  slug: {type: String},\n  categories: [{name: {type: String, required: true}}]\n})\n\n// Do not change to es6 arrow function\nbookSchema.pre('save', function (next) {\n  if (this.author) {\n    this.slug = `${slugify(this.author)}-${slugify(this.title)}`\n  } else {\n    this.slug = slugify(this.title)\n  }\n\n  next()\n})\n\nbookSchema.pre('findOneAndUpdate', function (next) {\n  const _id = this._conditions._id\n  const slug = `${slugify(this._update.author)}-${slugify(this._update.title)}`\n\n  this.findOneAndUpdate({_id}, {slug})\n  next()\n})\n\n\nexport default mongoose.model('Book', bookSchema)\n\n\n\n// WEBPACK FOOTER //\n// ./server/db/models/Book.js","// Schema\nimport mongoose from 'mongoose'\nconst Schema = mongoose.Schema\n// Slugify\nimport {slugify} from 'transliteration'\n\nconst categorySchema = new Schema({\n  name: {type: String, required: true},\n  slug: {type: String}\n})\n\n// Do not change to es6 arrow function\n\ncategorySchema.pre('save', function (next) {\n  this.slug = slugify(this.name)\n  next()\n})\n\ncategorySchema.pre('findOneAndUpdate', function (next) {\n  const _id = this._conditions._id\n  const slug = slugify(this._update.name)\n\n  this.findOneAndUpdate({_id}, {slug})\n  next()\n})\n\nexport default mongoose.model('Category', categorySchema)\n\n\n\n// WEBPACK FOOTER //\n// ./server/db/models/Category.js","import Book from '../../db/models/Book'\n// GraphQLTypes\nimport BookCategoryType from './BookCategoryType'\nimport {GraphQLObjectType, GraphQLString, GraphQLList} from 'graphql'\n\nconst CategoryType = new GraphQLObjectType({\n  name: 'Category',\n  description: 'Category of book',\n  fields: () => ({\n    id: {\n      type: GraphQLString,\n      description: 'Mongo ObjectID'\n    },\n    name: {\n      type: GraphQLString,\n      description: 'Name of the category'\n    },\n    slug: {\n      type: GraphQLString,\n      description: 'Category slug'\n    },\n    books: {\n      name: 'CategoryBook',\n      type: new GraphQLList(BookCategoryType),\n      description: 'Books included in this catagory',\n      resolve: async (source) => {\n        const name = source.name\n\n        return await Book.find({'categories.name': name})\n      }\n    }\n  })\n})\n\nexport default CategoryType\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/types/CategoryType.js","import Category from '../../db/models/Category.js'\nimport {\n  GraphQLObjectType,\n  GraphQLString,\n  GraphQLNonNull,\n  GraphQLBoolean,\n  GraphQLList\n} from 'graphql'\nimport CategoryType from './CategoryType'\n\nconst BookType = new GraphQLObjectType({\n  name: 'Book',\n  description: 'Book item',\n  fields: () => ({\n    id: {type: GraphQLString, description: 'Mongo ObjectID'},\n    title: {type: new GraphQLNonNull(GraphQLString), description: 'Book title'},\n    author: {type: GraphQLString, description: 'Book\\'s author'},\n    finished: {type: GraphQLBoolean, description: 'Represents reading status of book'},\n    slug: {type: GraphQLString, description: 'Book\\'s slug'},\n    categories: {\n      type: new GraphQLList(CategoryType),\n      description: 'Categories in which current book belongs',\n      resolve: async (source) => {\n        const categoryNames = source.categories.map(c => c.name)\n\n        return await Category.find({name: {$in: categoryNames}})\n      }\n    }\n  })\n})\n\nexport default BookType\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/types/BookType.js","import {\n  GraphQLInputObjectType,\n  GraphQLString,\n  GraphQLNonNull\n} from 'graphql'\n\nconst CategoryInputType = new GraphQLInputObjectType({\n  name: 'CategoryInput',\n  description: 'Input category with parameters',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      description: 'Name of the category'\n    }\n  })\n})\n\nexport default CategoryInputType\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/types/CategoryInputType.js","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"transliteration\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"transliteration\"\n// module id = 8\n// module chunks = 0","import {GraphQLObjectType, GraphQLString} from 'graphql'\n\nconst Message = new GraphQLObjectType({\n  name: 'Message',\n  description: 'Returing message type',\n  fields: {\n    message: { type: GraphQLString }\n  }\n})\n\nexport default Message\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/types/Message.js","import {\n  GraphQLInputObjectType,\n  GraphQLString,\n  GraphQLNonNull,\n  GraphQLBoolean,\n  GraphQLList\n} from 'graphql'\nimport CategoryInputType from './CategoryInputType'\n\nconst BookInputType = new GraphQLInputObjectType({\n  name: 'BookInput',\n  description: 'Book input item',\n  fields: () => ({\n    title: {\n      type: new GraphQLNonNull(GraphQLString),\n      description: 'Book title'\n    },\n    author: {type: GraphQLString, description: 'Book\\'s author'},\n    finished: {type: GraphQLBoolean, description: 'Represents reading status of book'},\n    categories: {\n      type: new GraphQLList(CategoryInputType),\n      description: 'Categories in which current book belongs'\n    }\n  })\n})\n\nexport default BookInputType\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/types/BookInputType.js","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 12\n// module chunks = 0","// Express\nimport express from 'express'\nimport pathUtils from 'path'\n// graphql\nimport graphql from './graphql'\n// DB\nimport './db'\n// Initialization\nconst app = express()\n// Middlewares\napp.use(graphql)\napp.use('/', express.static('public'))\napp.get( \"*\", function( req, res ) {\n  res.sendFile(pathUtils.resolve('public', 'index.html' ))\n})\n\napp.listen(process.env.PORT, () => {\n  console.log(`Listening port ${process.env.PORT}`) //eslint-disable-line\n})\n\n\n\n// WEBPACK FOOTER //\n// ./server/index.js","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 14\n// module chunks = 0","import express from 'express'\n// GraphQL schema\nimport graphqlHTTP from 'express-graphql'\nimport Schema from './schema'\n\nconst app = express()\n\napp.use('/graphql', graphqlHTTP(request => ({\n  schema: Schema,\n  context: request,\n  pretty: true,\n  graphiql: true,\n})))\n\nexport default app\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/index.js","module.exports = require(\"express-graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-graphql\"\n// module id = 16\n// module chunks = 0","import {GraphQLObjectType, GraphQLSchema} from 'graphql'\n// Categories\nimport getCategory from './categories/getCategory'\nimport getCategories from './categories/getCategories'\nimport createCategory from './categories/createCategory'\nimport updateCategory from './categories/updateCategory'\nimport deleteCategory from './categories/deleteCategory'\nimport addBookToCategory from './categories/addBookToCategory'\nimport removeBookFromCategory from './categories/removeBookFromCategory'\n// Books\nimport getBooks from './books/getBooks'\nimport getBook from './books/getBook'\nimport createBook from './books/createBook'\nimport updateBook from './books/updateBook'\nimport deleteBook from './books/deleteBook'\nimport addCategoryToBook from './books/addCategoryToBook'\nimport removeCategoryFromBook from './books/removeCategoryFromBook'\n\nconst Query = new GraphQLObjectType({\n  name: 'RootQuery',\n  fields: Object.assign({},\n    getCategory,\n    getCategories,\n    getBook,\n    getBooks\n  )\n})\n\nconst Mutation = new GraphQLObjectType({\n  name: 'RootMutation',\n  fields: Object.assign({},\n    createCategory,\n    updateCategory,\n    deleteCategory,\n    addBookToCategory,\n    removeBookFromCategory,\n    createBook,\n    updateBook,\n    deleteBook,\n    addCategoryToBook,\n    removeCategoryFromBook\n  )\n})\n\nconst Schema = new GraphQLSchema({\n  query: Query,\n  mutation: Mutation\n})\n\nexport default Schema\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/schema.js","import Category from '../../db/models/Category'\n// Types\nimport CategoryType from '../types/CategoryType'\n// GraphQL\nimport {GraphQLString, GraphQLNonNull} from 'graphql'\n\nconst getCategory = {\n  getCategory: {\n    type: CategoryType,\n    description: 'Fetch single category by ID',\n    args: {\n      id: {type: new GraphQLNonNull(GraphQLString), description: 'Id of fetched category'}\n    },\n    resolve: async (source, args) => {\n      try {\n        return await Category.findOne({_id: args.id})\n      } catch (e) {\n        throw new Error(`Could not find Category with id ${args.id}`)\n      }\n    }\n  }\n}\n\nexport default getCategory\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/categories/getCategory.js","import {\n  GraphQLObjectType,\n  GraphQLString,\n  GraphQLNonNull,\n  GraphQLBoolean,\n} from 'graphql'\n\nconst BookCategoryType = new GraphQLObjectType({\n  name: 'BookCategory',\n  description: 'Book item',\n  fields: () => ({\n    id: {type: GraphQLString, description: 'Mongo ObjectID'},\n    title: {type: new GraphQLNonNull(GraphQLString), description: 'Book title'},\n    author: {type: GraphQLString, description: 'Book\\'s author'},\n    finished: {type: GraphQLBoolean, description: 'Represents reading status of book'},\n    slug: {type: GraphQLString, description: 'Book\\'s slug'}\n  })\n})\n\nexport default BookCategoryType\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/types/BookCategoryType.js","import Category from '../../db/models/Category'\n// Types\nimport CategoryType from '../types/CategoryType'\nimport {GraphQLList} from 'graphql'\n\nconst getCategories = {\n  getCategories: {\n    type: new GraphQLList(CategoryType),\n    description: 'Gets list of all categories',\n    resolve: async () => {\n      return await Category.find()\n    }\n  }\n}\n\nexport default getCategories\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/categories/getCategories.js","import Category from '../../db/models/Category'\n// Types\nimport CategoryType from '../types/CategoryType'\nimport CategoryInputType from '../types/CategoryInputType'\n\nconst createCategory = {\n  createCategory: {\n    type: CategoryType,\n    description: 'Creates new category in the database',\n    args: {\n      category: {type: CategoryInputType, description: 'Input category'}\n    },\n    resolve: async (source, args) => {\n      return await Category.create(args.category)\n    }\n  }\n}\n\nexport default createCategory\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/categories/createCategory.js","import Category from '../../db/models/Category'\n// Types\nimport CategoryType from '../types/CategoryType'\nimport CategoryInputType from '../types/CategoryInputType'\n// GraphQL\nimport {GraphQLString, GraphQLNonNull} from 'graphql'\n\nconst updateCategory = {\n  updateCategory: {\n    type: CategoryType,\n    description: 'Updates category in the db',\n    args: {\n      id: {\n        type: new GraphQLNonNull(GraphQLString),\n        description: 'Id of the category you want to update'\n      },\n      category: {type: CategoryInputType, description: 'Input category'}\n    },\n    resolve: async (source, args) => {\n      const {id, category} = args\n\n      return await Category.findOneAndUpdate({_id: id}, category, {new: true})\n    }\n  }\n}\n\nexport default updateCategory\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/categories/updateCategory.js","import Category from '../../db/models/Category'\n// Types\nimport Message from '../types/Message'\n// GraphQL\nimport {GraphQLString} from 'graphql'\n\nconst deleteCategory = {\n  deleteCategory: {\n    type: Message,\n    description: 'Deletes category form database by Id',\n    args: {\n      id: {type: GraphQLString, description: 'Id of category to delete'}\n    },\n    resolve: (source, args) => {\n      Category.deleteOne({_id: args.id})\n\n      return {message: 'success'}\n    }\n  }\n}\n\nexport default deleteCategory\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/categories/deleteCategory.js","import Book from '../../db/models/Book'\nimport Category from '../../db/models/Category'\n// Types\nimport CategoryType from '../types/CategoryType'\n// GraphQL\nimport {GraphQLString, GraphQLNonNull} from 'graphql'\n\nconst addBookToCategory = {\n  addBookToCategory: {\n    type: CategoryType,\n    description: 'Adds new book to category by ID',\n    args: {\n      id: {\n        type: new GraphQLNonNull(GraphQLString),\n        description: 'Id of the category'\n      },\n      bookId: {\n        type: new GraphQLNonNull(GraphQLString),\n        description: 'Id of the book'\n      }\n    },\n    resolve: async (source, args) => {\n      const {id, bookId} = args\n\n      const category = await Category.findOne({_id: id})\n      const newCategory = {name: category.name}\n\n      const where = {_id: bookId}\n      const push = {$push: {categories: newCategory}}\n\n      await Book.findOneAndUpdate(where, push, {new: true})\n\n      return category\n    }\n  }\n}\n\nexport default addBookToCategory\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/categories/addBookToCategory.js","import Book from '../../db/models/Book'\nimport Category from '../../db/models/Category'\n// Types\nimport CategoryType from '../types/CategoryType'\n// GraphQL\nimport {GraphQLString, GraphQLNonNull} from 'graphql'\n\nconst removeBookFromCategory = {\n  removeBookFromCategory: {\n    type: CategoryType,\n    description: 'Adds new book to category by ID',\n    args: {\n      id: {\n        type: new GraphQLNonNull(GraphQLString),\n        description: 'Id of the category'\n      },\n      bookId: {\n        type: new GraphQLNonNull(GraphQLString),\n        description: 'Id of the book'\n      }\n    },\n    resolve: async (source, args) => {\n      const {id, bookId} = args\n\n      const category = await Category.findOne({_id: id})\n      const newCategory = {name: category.name}\n\n      const where = {_id: bookId}\n      const pull = {$pull: {categories: newCategory}}\n      await Book.findOneAndUpdate(where, pull, {new: true})\n\n      return category\n    }\n  }\n}\n\nexport default removeBookFromCategory\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/categories/removeBookFromCategory.js","import Book from '../../db/models/Book'\n// Types\nimport BookType from '../types/BookType'\n// GraphQL\nimport {GraphQLList} from 'graphql'\n\nconst getBooks = {\n  getBooks: {\n    type: new GraphQLList(BookType),\n    description: 'Gets list of all books',\n    resolve: async () => {\n      return await Book.find()\n    }\n  }\n}\n\nexport default getBooks\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/books/getBooks.js","import Book from '../../db/models/Book'\n// Types\nimport BookType from '../types/BookType'\n// GraphQL\nimport {GraphQLString, GraphQLNonNull} from 'graphql'\n\nconst getBook = {\n  getBook: {\n    type: BookType,\n    description: 'Gets list of all books',\n    args: {\n      id: {type: new GraphQLNonNull(GraphQLString), description: 'Id of fetched book'}\n    },\n    resolve: async (source, args) => {\n      try {\n        return await Book.findOne({_id: args.id})\n      } catch (e) {\n        throw new Error(`Could not find Book with id ${args.id}`)\n      }\n    }\n  }\n}\n\nexport default getBook\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/books/getBook.js","import Book from '../../db/models/Book'\n// Types\nimport BookType from '../types/BookType'\nimport BookInputType from '../types/BookInputType'\n\nconst createBook = {\n  createBook: {\n    type: BookType,\n    description: 'Creates new book in the database',\n    args: {\n      book: {type: BookInputType, description: 'Book input object'}\n    },\n    resolve: async (source, args) => {\n      const {book} = args\n\n      const newBook = await Book.create(book)\n\n      return newBook\n    }\n  }\n}\n\nexport default createBook\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/books/createBook.js","import Book from '../../db/models/Book'\n// Types\nimport BookType from '../types/BookType'\nimport BookInputType from '../types/BookInputType'\n// GraphQL\nimport {GraphQLString, GraphQLNonNull} from 'graphql'\n\nconst updateBook = {\n  updateBook: {\n    type: BookType,\n    description: 'Updates book in the db',\n    args: {\n      id: {\n        type: new GraphQLNonNull(GraphQLString),\n        description: 'Id of the book you want to update'\n      },\n      book: {type: BookInputType, description: 'Input book'}\n    },\n    resolve: async (source, args) => {\n      const {id, book} = args\n\n      const updatedBook = await Book.findOneAndUpdate({_id: id}, book, {new: true})\n\n      return updatedBook\n    }\n  }\n}\n\nmodule.exports = updateBook\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/books/updateBook.js","import Book from '../../db/models/Book'\n// Types\nimport Message from '../types/Message'\n// GraphQL\nimport {GraphQLString, GraphQLNonNull} from 'graphql'\n\nconst deleteBook = {\n  deleteBook: {\n    type: Message,\n    description: 'Deletes Book form database by Id',\n    args: {\n      id: {\n        type: new GraphQLNonNull(GraphQLString),\n        description: 'Id of book to delete'\n      }\n    },\n    resolve: (source, args) => {\n      Book.deleteOne({_id: args.id})\n\n      return {message: 'success'}\n    }\n  }\n}\n\nexport default deleteBook\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/books/deleteBook.js","import Book from '../../db/models/Book'\n// Types\nimport BookType from '../types/BookType'\nimport CategoryInputType from '../types/CategoryInputType'\n// GraphQL\nimport {GraphQLString, GraphQLNonNull} from 'graphql'\n\nconst addCategoryToBook = {\n  addCategoryToBook: {\n    type: BookType,\n    description: 'Adds new category to book by ID',\n    args: {\n      id: {\n        type: new GraphQLNonNull(GraphQLString),\n        description: 'Id of the book'\n      },\n      category: {type: CategoryInputType, description: 'Inserted category'}\n    },\n    resolve: async (source, args) => {\n      const {id, category} = args\n      const where = {_id: id}\n      const push = {$push: {categories: category}}\n\n      const updatedBook = await Book.findOneAndUpdate(where, push, {new: true})\n\n      return updatedBook\n    }\n  }\n}\n\nexport default addCategoryToBook\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/books/addCategoryToBook.js","import Book from '../../db/models/Book'\n// Types\nimport BookType from '../types/BookType'\nimport CategoryInputType from '../types/CategoryInputType'\n// GraphQL\nimport {GraphQLString, GraphQLNonNull} from 'graphql'\n\nconst removeCategoryFromBook = {\n  removeCategoryFromBook: {\n    type: BookType,\n    description: 'Removes category from book ID',\n    args: {\n      id: {\n        type: new GraphQLNonNull(GraphQLString),\n        description: 'Id of the book'\n      },\n      category: {type: CategoryInputType, description: 'Removed category'}\n    },\n    resolve: async (source, args) => {\n      const {id, category} = args\n      const where = {_id: id}\n      const pull = {$pull: {categories: category}}\n\n      const updatedBook = await Book.findOneAndUpdate(where, pull, {new: true})\n\n      return updatedBook\n    }\n  }\n}\n\nexport default removeCategoryFromBook\n\n\n\n// WEBPACK FOOTER //\n// ./server/graphql/books/removeCategoryFromBook.js","import dotenv from 'dotenv'\ndotenv.load()\n// Mongoose connection\nimport mongoose from 'mongoose'\nmongoose.Promise = global.Promise\nmongoose.connect(process.env.DATABASE_URL)\n\nconst db = mongoose.connection\ndb.on('error', console.error.bind(console, 'connection error:')) //eslint-disable-line\n\nexport default db\n\n\n\n// WEBPACK FOOTER //\n// ./server/db/index.js","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 34\n// module chunks = 0"],"sourceRoot":""}